import{d as r,k as c,v as f,g as o,b as v,t as m,o as u,F as b,e as g,m as h,r as k,s as V,j as x,K as y}from"./app-1f9e1dec.js";const $={class:"mt-2"},B={class:"text-meta text-red"},T=r({__name:"InputError",props:{message:{}},setup(n){return(e,l)=>c((u(),o("div",$,[v("p",B,m(e.message),1)],512)),[[f,e.message]])}}),I={class:"block text-body"},w=r({__name:"InputLabel",props:{value:{}},setup(n){return(e,l)=>(u(),o("label",I,[e.value?(u(),o(b,{key:0},[g(m(e.value),1)],64)):h(e.$slots,"default",{key:1})]))}}),D=r({__name:"TextInput",props:{modelValue:{}},emits:["update:modelValue"],setup(n,{expose:e,emit:l}){const d=n,i=l,a=k(null);V(()=>{var s,t;(s=a.value)!=null&&s.hasAttribute("autofocus")&&((t=a.value)==null||t.focus())}),e({focus:()=>{var s;return(s=a.value)==null?void 0:s.focus()}});const p=x({get(){return d.modelValue},set(s){i("update:modelValue",s)}});return(s,t)=>c((u(),o("input",{class:"input-field","onUpdate:modelValue":t[0]||(t[0]=_=>p.value=_),ref_key:"input",ref:a},null,512)),[[y,p.value]])}});export{w as _,D as a,T as b};
